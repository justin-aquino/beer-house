PHASE 1

1. Display the beer list
2. Show individual beer
3. Search bar, filter by name

Phase 2
1. create models for user, beer, and reviews.
    a. sign up
    b. login, logout
2. CRUD for user (auth)
    a. Form page for sign up
    b. Form page for login/logout
    c. Change password
    d. Delete Account
3. CRUD for reviews
    a. Form page for writing reviews
    b. Edit reviews
    c. Display reviews in show.ejs. Move add to tracker button to show.ejs
    d. Delete reviews.
4. Create tracker model containing FKs for user and beer.
    a. Be able to add a beer in the tracker
    b. delete beer in the tracker
    c. add description in the tracker. (I dont have to make a review if I dont want to? Add make a review btn?)



// find or orcreate when adding to favorite beer

// user.belongsToMany(beers) and vice versa


FOO-bar
user.addBeer(beer)


QUESTIONS TO ASK ON WEDNESDAY:

// ASK SOMEONE HOW TO REMOVE A COLUMN FROM A TABLE.
// YOU DONT NEED THE TYPE COLUMN ON BEERS, CHANGE IT TO IMG SRC
//Also the manufacturer, exchange it to yeast.
//help modify the dbTest.js


STAND UP:
3/3
CRUD for beers is done. I'm able to add a review to a beer, and display the user's own review (not including other user's review)



to do:

CRUD FOR reviews
Instead of showing just the user's reviews, show all reviews, including the names of the users who made the review.(loop through reviews)
Only show delete or edit btn if you're the one who made the review.

1. findOne user > include:beer > getBeer()?
